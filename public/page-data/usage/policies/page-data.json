{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/usage/policies/","result":{"data":{"mdx":{"id":"31af4369-ba39-54b5-9427-02efb6bdd1f3","excerpt":"Policies consist of a definition of sensitive data and a set of rules specifying how the data can be accessed, expressed in YAML format. Here is an\nexampleâ€¦","fields":{"slug":"/usage/policies/"},"frontmatter":{"title":"Data Access Policies","description":"A guide for defining data access policies","image":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Data Access Policies\",\n  \"description\": \"A guide for defining data access policies\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Policies consist of a definition of sensitive data and a set of rules specifying how the data can be accessed, expressed in YAML format. Here is an\\nexample policy along with descriptions of each field.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"sensitiveAttrs:\\n  - card_number\\n  - credit_limit\\n  - card_family\\nlocations:\\n  - repo: invoices\\n    schema: finance\\n    table: cards\\nrules:\\n  - identities:\\n      - scientist\\n    reads:\\n      allow: true\\n      attributes: [\\\"*\\\"]\\n      rows: 10\\n    updates:\\n      allow: true\\n      attributes:\\n        - credit_limit\\n      rows: 1\\n    deletes:\\n      allow: true\\n      rows: 1\\ndefaultRule:\\n  reads:\\n    allow: true\\n    attributes:\\n    rows: 1\\n  updates:\\n    allow: false\\n  deletes:\\n    allow: false\\n\")), mdx(\"p\", null, \"A policy can be broken into two sections: \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"data specification\"), \", comprising fields \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sensitiveAttrs\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"locations\"), \"; and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"data access rules\"), \", comprising fields \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rules\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"defaultRule\"), \".\"), mdx(\"h2\", {\n    \"id\": \"data-specification\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#data-specification\",\n    \"aria-label\": \"data specification permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Data Specification\"), mdx(\"p\", null, \"Users specify sensitive data to be managed by the policy through two fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sensitiveAttrs\"), \" is the dataset managed by the policy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"locations\"), \" is the set of locations where the dataset exists each location is defined by the repository, schema, and table containing the dataset entered in fields \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"repo\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schema\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"table\"), \", respectively.\")), mdx(\"p\", null, \"In the following example, we specify that attributes \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"card_number\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"card_family\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"credit_limit\"), \" are sensitive and exist in table cards under the schema playground in the clinics repository as well as in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"credit\"), \" repository.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"sensitiveAttrs: [card_number, card_family, credit_limit]\\nlocations:\\n  - repo: credit\\n    schema: playground\\n    table: cards\\n  - repo: clinics\\n    schema: playground\\n    table: cards\\n\")), mdx(\"h2\", {\n    \"id\": \"data-access-rules\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#data-access-rules\",\n    \"aria-label\": \"data access rules permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Data Access Rules\"), mdx(\"p\", null, \"Users can manage how sensitive data can be accessed by specifying data access rules.\"), mdx(\"p\", null, \"A data access rule comprises these fields:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"reads\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"updates\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"deletes\"), \" respectively specify restrictions on reads, updates, and deletes of sensitive data. For each action, a user can specify these fields:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"allow\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"true\"), \" when the action is allowed, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"false\"), \" otherwise\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attributes\"), \" is the set of sensitive attributes for which the action is allowed\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the value \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"[\\\"*\\\"]\"), \" is used to specify that all attributes can be accessed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allowed attributes are only specified for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"read\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"update\"), \" actions, because attributes cannot be selectively deleted without deleting the row\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rows\"), \" specifies the maximum numbers of rows that can be accessed or affected by the action\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the value \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-1\"), \" is used to specify that there is no limit on the amount of rows that can be accessed identities is the set of entities affected by the rule\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"identities\"), \" is the set of entities affected by the rule\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this field is not specified for the default rule, which applies to accesses that do not match any of the identities specified by rules in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rules\"), \" field\")))))), mdx(\"p\", null, \"For example, the following rule dictates that the identity \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scientist\"), \" can read up to 10 rows of any attributes, update a single row of the attribute \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"credit_limit\"), \", and is prohibited from deleting any sensitive data managed by the policy containing this rule.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), \"identities:\\n      - scientist\\n    reads:\\n      allow: true\\n      attributes: [\\\"*\\\"]\\n      rows: 10\\n    updates:\\n      allow: true\\n      attributes:\\n        - credit_limit\\n      rows: 1\\n    deletes:\\n      allow: true\\n      rows: 1\\n\")), mdx(\"p\", null, \"A single policy can have several such rules specified in the field rules, as well as a rule that applies to any identities that aren\\u2019t covered by\\nthose rules specified in the field \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"defaultRule\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/usage/policies/","prev":{"id":"7d4a116a-1314-5b87-a1dc-c9b58d75275a","fields":{"slug":"/usage/opa_rest/"},"frontmatter":{"title":"Data access control via OPA REST APIs"}},"next":null}}}